# Configuration Template for HDBSCAN Clustering Pipeline
# 
# IMPORTANT: This is a template file. Copy to config.yaml and fill in your actual values.
# The actual config.yaml file is ignored by git to protect sensitive information.
#
# Copy this file to config.yaml and replace all placeholder values with your actual configuration

# BigQuery Configuration
bigquery:
  project_id: "YOUR_GCP_PROJECT_ID"
  
  # Service account configuration (will be loaded from environment variable)
  service_account_key_path: ${SERVICE_ACCOUNT_KEY_PATH}
  
  # Table configurations (from .env file)
  tables:
    team_services: ${TEAM_SERVICES_TABLE}
    incidents: ${INCIDENT_TABLE}
    raw_incidents: ${INCIDENT_TABLE}  # Alias for compatibility
    problems: ${PROBLEM_TABLE}
    preprocessed_incidents: "YOUR_PROJECT.preprocessing_pipeline.preprocessed_incidents"
    clustering_predictions: "YOUR_PROJECT.YOUR_DATASET.clustering_predictions"
    preprocessing_watermarks: "YOUR_PROJECT.preprocessing_pipeline.preprocessing_watermarks"
    
    # Legacy support for original pipeline
    embeddings_table: "YOUR_PROJECT.preprocessing_pipeline.preprocessed_incidents"
    results_table: "YOUR_PROJECT.YOUR_DATASET.clustering_predictions"

# Azure Configuration
azure:
  openai:
    # Chat completion configuration
    endpoint: ${AZURE_OPENAI_ENDPOINT}
    api_key: ${OPENAI_API_KEY}
    api_version: ${AZURE_OPENAI_API_VERSION}
    deployment_name: ${AZURE_OPENAI_CHAT_DEPLOYMENT_NAME}
    
    # Embedding configuration
    embedding_endpoint: ${AZURE_OPENAI_EMBEDDING_ENDPOINT}
    embedding_key: ${AZURE_OPENAI_EMBEDDING_KEY}
    embedding_api_version: ${AZURE_OPENAI_EMBEDDING_API_VERSION}
    embedding_model: ${AZURE_OPENAI_EMBEDDING_MODEL}

# Blob Storage Configuration
blob_storage:
  connection_string: ${BLOB_CONNECTION_STRING}
  container_name: "prediction-artifacts"

# Clustering Configuration
clustering:
  # HDBSCAN parameters
  hdbscan:
    min_cluster_size: 25
    min_samples: 5
    cluster_selection_epsilon: 0.1
    
  # UMAP parameters  
  umap:
    n_components: 50
    n_neighbors: 100
    min_dist: 0.1
    metric: 'cosine'
    
  # Embedding configuration - Pure semantic as requested
  embedding:
    weights:
      entity: 0.0      # Disabled
      action: 0.0      # Disabled  
      semantic: 1.0    # Pure semantic embeddings
    batch_size: 25
    max_length: 8192

# Pipeline Configuration
pipeline:
  save_to_local: true
  result_path: "./results"
  parallel_training: true
  max_workers: 4
  
  preprocessing:
    frequency_minutes: 60    # Run every hour
    batch_size: 1000
    
  prediction:
    frequency_minutes: 120   # Run every 2 hours
    batch_size: 500

# Tech Centers (15 total)
tech_centers:
  - "BT-TC-Product Development & Engineering"
  - "BT-TC-Infrastructure Services"
  - "BT-TC-Network Operations"
  - "BT-TC-Security Operations"
  - "BT-TC-Cloud Services"
  - "BT-TC-Data Analytics"
  - "BT-TC-Enterprise Applications"
  - "BT-TC-Field Services"
  - "BT-TC-Customer Support"
  - "BT-TC-Quality Assurance"
  - "BT-TC-DevOps Engineering"
  - "BT-TC-Business Intelligence"
  - "BT-TC-Systems Integration"
  - "BT-TC-Mobile Solutions"
  - "BT-TC-Compliance & Governance"

# Logging Configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"